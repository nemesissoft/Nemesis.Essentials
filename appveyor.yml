version: '{build}'
image: Visual Studio 2022
configuration: Release
init:
- pwsh: >-
    if ($env:APPVEYOR_REPO_TAG -eq "true")
    {
        Update-AppveyorBuild -Version "$($env:APPVEYOR_REPO_TAG_NAME.TrimStart("v"))"
    }
    else
    {
        Update-AppveyorBuild -Version "0.0.1+dev-$($env:APPVEYOR_REPO_COMMIT.Substring(0, 7))"
    }    
dotnet_csproj:
  patch: true
  file: '**\*.csproj;**\*.props'
  version: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'
before_build:
- ps: >-
    nuget restore Nemesis.Essentials.sln

    if ($env:APPVEYOR_REPO_TAG_NAME)
    {
        $releaseNotes = & $([scriptblock]::Create((New-Object Net.WebClient).DownloadString( 'https://raw.githubusercontent.com/nemesissoft/BuildTools/master/GetGithubReleaseNotes.ps1' ))) -tagName "$env:APPVEYOR_REPO_TAG_NAME" -repoName "$env:APPVEYOR_REPO_NAME"
    
        if($releaseNotes)
        {
            $shortDesc = $releaseNotes.Item1
            $longDesc = $releaseNotes.Item2

            Update-AppveyorBuild -Message "$shortDesc"

            & $([scriptblock]::Create((New-Object Net.WebClient).DownloadString( 'https://raw.githubusercontent.com/nemesissoft/BuildTools/master/UpdateReleaseNotes.ps1' ))) -basePath "$env:APPVEYOR_BUILD_FOLDER" -releaseNotes "$longDesc"
        }        
    }       

build:
  project: Nemesis.Essentials.sln
  verbosity: normal
artifacts:
- path: '**\*.nupkg'
  name: NuGet Packages
- path: '**\*.snupkg'
  name: NuGet Symbols Packages
deploy:
- provider: NuGet
  api_key:
    secure: Py3oG4T4UplJdmxTR87wmv8IPUFwesWwsimx1XkAZYxxf/dkhi16viOWk/DXk8Ox
  on:
    branch: master
    APPVEYOR_REPO_TAG: true